name: Coverage Report

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-and-upload-coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            .bun
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install

      - name: Run tests with coverage
        run: bun test --coverage --coverage-reporter=lcov

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: jasonnathan/llm-core
      - name: Build package
        run: bun run build
      - name: Configure npm auth
        run: |
          echo "//registry.npmjs.org/:_authToken=\${NODE_AUTH_TOKEN}" >> ~/.npmrc
          echo "registry=https://registry.npmjs.org/" >> ~/.npmrc
          echo "always-auth=true" >> ~/.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
      - name: Publish package (only on tags)
        if: startsWith(github.ref, 'refs/tags/')
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
      - name: Create GitHub release (if tag)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          gh release create "${GITHUB_REF##*/}" \
            --title "${GITHUB_REF##*/}" \
            --notes "Automated release for version ${GITHUB_REF##*/}" || echo "Release may already exist."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts to release
        if: startsWith(github.ref, 'refs/tags/')
        run: gh release upload "${GITHUB_REF##*/}" dist/* --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}